Summary of Searches Lecture

LINEAR SEARCH

public int linearSearch(int[] list, int searchKey)
{
   int i;
   for (i=0; i<list.length; i++)
   {
      if (list[i] == searchKey)
         return i;
   }
   return -1;
}

int list[] = {5,4,32,6,4,6,5};

a) Trace the action of the linear search on
   the list array, for the search key 6, by
   completing the table below:

Ans:   
   i       i < size       list[i]     list[i]==searchKey
   0       true           5           false
   1       true           4           false
   2       true           32          false
   3       true           6           true
   
b) What value will the algorithm return?
   Ans: 3
   
c) How many comparisons are performed during the search?
   Ans: 8		
   
d) How many keys are examined/visited during the search?
   Ans: 4

e) List the keys in the order visited.
   Ans: 5, 4, 32, 6 
   
f) Suppose this task was performed on a CPU that takes
   3 microseconds to perform a comparison, approximately how long 
   will it take the search to be completed?
   
   Ans: 3 * 8  = 24 microseconds 

g) Answer a-f when the search key is 7.	  

 
BINARY SEARCH

The binary search algorithm is a divide-and-conquer algorithm. It works
only on ordered lists. It checks the middle of the list for the search key.
If the search key is found, it returns its position (index). If it is not
found, half of the list is eliminated and the steps are repeated.

Observe that one of these has to be true: a) search key is either the middle value
b) the search key is to the left of the middle value; that is in the left half
of the list or c) the search key is to the right of the middle value; that is,
in the right half of the list. We know this because the list is ordered. 


public int binarySearch(int[] list, int searchKey)
{
   int low = 0, mid, high = list.length-1;
   while (low <= high)
   {
      mid = (low + high) / 2;
      if (searchKey == list[mid])
         return mid;
      else if (search < list[mid])
         high = mid - 1;
      else
         low = mid + 1;
   }
   return -1 - low;
}
   
Part I:

a) Give a fundamental difference between binary search and linear search.
Ans: binary search only works on ordered list while linear search works on
     both ordered and unordered lists.
	 
	 
int list[] = {1, 3, 5, 7, 7, 11, 13, 15, 17, 19, 23};

b) Trace the action of the binary search on
   the list array, for the search key 16, by
   completing the table below:

Ans:   
   low  high  low <= high   mid   list[mid]  searchKey==list[mid]   searchKey<list[mid]
   0    10    true          5     11         false                  false 
   6    10    true          8     17         false                  true
   6    7     true          6     13         false                  false
   7    7     true          7     15         false                  false
   8    7     false
   
b) What value will the algorithm return?
   Ans: -9
   
c) How many comparisons are performed during the search?
   Ans: 13		
   
d) How many keys are examined/visited during the search?
   Ans: 4

e) List the keys in the order visited.
   Ans: 11, 17, 13, 15 
   
f) Suppose this task was performed on a CPU that takes
   3 microseconds to perform a comparison, approximately how long 
   will it take the search to be completed?
   
   Ans: 3 * 13  = 39 microseconds 

g) Answer a-f when the search key is 7.
  
Part II:
 
a) Trace the action of the binary search on
   the list array, for the search key 7, by
   completing the table below:

Ans:   
   low  high  low <= high   mid   list[mid]  searchKey==list[mid]   searchKey<list[mid]
   0    10    true          5     11         false                  true
   0    4     true          2     5          false                  false
   3    4     true          3     7          true
   
   
b) What value will the algorithm return?
   Ans: 3
   
c) How many comparisons are performed during the search?
   Ans: 8		
   
d) How many keys are examined/visited during the search?
   Ans: 3

e) List the keys in the order visited.
   Ans: 11, 5, 7
   
f) Suppose this task was performed on a CPU that takes
   3 microseconds to perform a comparison, approximately how long 
   will it take the search to be completed?
   
   Ans: 3 * 8  = 24 microseconds    			  

 
