Exercise A:

What will this code segment output?

final int DIM = 3;
int row = DIM - 1, col = DIM/2, i, j, k = 1;
int[][] magic = new int[DIM][DIM];
for (i = 0; i < DIM; i++)
{
   for (j = 0; j < DIM; j++)
   {
      magic[row][col] = k;
      row = (row + 1) % DIM; 
      col = (col + 1) % DIM;
      if (magic[row][col] != 0)
      {
         row = (row + 3 - 2) % DIM;
         col = (col + 3 - 1) % DIM;
      }
      k++;
   }
}
System.out.println(Arrays.deepToString(magic));

Exercise B:

What will this code segment output?

final int DIM = 3;
int[][] magic = {{1,1,1},{1,1,1},{1,1,1}};
int i, j;
for (i = 0; i < DIM; i++)
{
   for (j = 0; j < DIM; j++)
   {
      if (i == 0)
      {
         if (j > 0)
            magic[i][j] = magic[i][j] + magic[i][j-1];	  
      }
      else if (j == 0)
         magic[i][j] = magic[i][j] + magic[i-1][j];
      else
         magic[i][j] = magic[i][j] + magic[i][j-1] + magic[i-1][j] -  + magic[i-1][j-1];
   }
}
System.out.println(Arrays.deepToString(magic));